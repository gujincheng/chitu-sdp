<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chitu.bigdata.sdp.mapper.SdpProjectMapper">
    <resultMap id="BaseResultMap" type="com.chitu.bigdata.sdp.api.model.SdpProject">
        <id column="id" jdbcType="BIGINT" property="id" />
        <result column="project_name" jdbcType="VARCHAR" property="projectName" />
        <result column="project_code" jdbcType="VARCHAR" property="projectCode" />
        <result column="product_line_name" jdbcType="VARCHAR" property="productLineName" />
        <result column="product_line_code" jdbcType="VARCHAR" property="productLineCode" />
        <result column="business_flag" jdbcType="VARCHAR" property="businessFlag" />
        <result column="enabled_flag" jdbcType="TINYINT" property="enabledFlag" />
        <result column="trace_id" jdbcType="VARCHAR" property="traceId" />
        <result column="created_by" jdbcType="VARCHAR" property="createdBy" />
        <result column="updated_by" jdbcType="VARCHAR" property="updatedBy" />
        <result column="creation_date" jdbcType="TIMESTAMP" property="creationDate" />
        <result column="updation_date" jdbcType="TIMESTAMP" property="updationDate" />
        <result column="priority" jdbcType="TINYINT" property="priority"/>
        <result column="app_key" jdbcType="VARCHAR" property="appKey" />
        <result column="app_secret" jdbcType="VARCHAR" property="appSecret" />
        <result column="forbid_udx_updation" jdbcType="INTEGER" property="forbidUdxUpdation"/>
        <result column="allow_job_add_edit" jdbcType="INTEGER" property="allowJobAddEdit"/>
    </resultMap>

    <resultMap id="ResultMap" type="com.chitu.bigdata.sdp.api.vo.SdpProjectResp">
        <id column="id" jdbcType="BIGINT" property="id" />
        <result column="project_name" jdbcType="VARCHAR" property="projectName" />
        <result column="project_code" jdbcType="VARCHAR" property="projectCode" />
        <result column="product_line_name" jdbcType="VARCHAR" property="productLineName" />
        <result column="product_line_code" jdbcType="VARCHAR" property="productLineCode" />
        <result column="enabled_flag" jdbcType="TINYINT" property="enabledFlag" />
        <result column="trace_id" jdbcType="VARCHAR" property="traceId" />
        <result column="created_by" jdbcType="VARCHAR" property="createdBy" />
        <result column="updated_by" jdbcType="VARCHAR" property="updatedBy" />
        <result column="owner_name" jdbcType="VARCHAR" property="ownerName" />
        <result column="creation_date" jdbcType="TIMESTAMP" property="creationDate" />
        <result column="updation_date" jdbcType="TIMESTAMP" property="updationDate" />
        <result column="project_owner" jdbcType="VARCHAR" property="projectOwner" />
        <result column="online_job_num" jdbcType="INTEGER" property="onlineJobNum" />
    </resultMap>
<!-- is_leader这个字段用于进行列表权限排序，当前用户有权限排在前面，是基于user_id（当前用户）项目角色进行排序-->
    <resultMap id="PlusResultMap" type="com.chitu.bigdata.sdp.api.domain.ProjectInfo">
        <id column="id" jdbcType="BIGINT" property="id" />
        <result column="project_name" jdbcType="VARCHAR" property="projectName" />
        <result column="project_code" jdbcType="VARCHAR" property="projectCode" />
        <result column="product_line_name" jdbcType="VARCHAR" property="productLineName" />
        <result column="product_line_code" jdbcType="VARCHAR" property="productLineCode" />
        <result column="enabled_flag" jdbcType="TINYINT" property="enabledFlag" />
        <result column="trace_id" jdbcType="VARCHAR" property="traceId" />
        <result column="created_by" jdbcType="VARCHAR" property="createdBy" />
        <result column="updated_by" jdbcType="VARCHAR" property="updatedBy" />
        <result column="owner_name" jdbcType="VARCHAR" property="ownerName" />
        <result column="creation_date" jdbcType="TIMESTAMP" property="creationDate" />
        <result column="updation_date" jdbcType="TIMESTAMP" property="updationDate" />
        <result column="is_leader" jdbcType="BIGINT" property="isLeader" />
        <result column="user_count" jdbcType="INTEGER" property="userCount" />
        <result column="online_job_num" jdbcType="INTEGER" property="onlineJobNum" />
        <result column="priority" jdbcType="TINYINT" property="priority"/>
        <result column="forbid_udx_updation" jdbcType="INTEGER" property="forbidUdxUpdation"/>
        <result column="allow_job_add_edit" jdbcType="INTEGER" property="allowJobAddEdit"/>
        <collection property="userList" ofType="com.chitu.bigdata.sdp.api.domain.ProjectUser">
            <result column="user_id" jdbcType="BIGINT" property="userId"/>
            <result column="project_id" jdbcType="BIGINT" property="projectId"/>
            <result column="is_admin" jdbcType="INTEGER" property="isAdmin"/>
            <result column="project_leader" jdbcType="INTEGER" property="projectLeader"/>
            <result column="user_name" jdbcType="VARCHAR" property="userName"/>
            <result column="employee_number" jdbcType="VARCHAR" property="employeeNumber"/>
        </collection>
        <collection property="engineList" ofType="com.chitu.bigdata.sdp.api.domain.SdpEngineInfo">
            <result column="engine_id" jdbcType="BIGINT" property="engineId"/>
            <result column="business_flag" jdbcType="VARCHAR" property="businessFlag"/>
            <result column="engine_version" jdbcType="VARCHAR" property="engineVersion"/>
            <result column="engine_name" jdbcType="VARCHAR" property="engineName"/>
        </collection>
    </resultMap>
    <resultMap id="ResultMap1" type="com.chitu.bigdata.sdp.api.domain.ProjectCountInfo">
        <result column="project_total" jdbcType="BIGINT" property="projectTotal" />
        <result column="job_total" jdbcType="BIGINT" property="jobTotal" />
        <result column="employee_total" jdbcType="BIGINT" property="employeeTotal" />
    </resultMap>
    <sql id="BaseTable">
        sdp_project
    </sql>
   <!--userId对应的控制is_leader，当是项目管理者或者项目成员时，需要进行排序在前面，有权限进入的项目排在前面 -->
    <select id="projectList" resultMap="PlusResultMap">
        select
        t1.id,
        t1.project_code,
        t1.project_name,
        t1.product_line_code,
        t1.product_line_name,
        t1.created_by,
        t1.is_leader,
        t1.creation_date,
        t1.user_count,
        case when t1.online_job_num is null then 0 else t1.online_job_num end as online_job_num,
        su2.user_name,
        t1.id as project_id,
        su2.id as user_id,
        su2.is_admin,
        su2.employee_number,
        spu2.is_leader as project_leader,
        se.id as engine_id,
        se.engine_version,
        se.business_flag,
        se.engine_name,
        t1.priority,
        t1.forbid_udx_updation,
        t1.allow_job_add_edit
        from(
        select
        t.id,
        t.project_code,
        t.project_name,
        t.product_line_code,
        t.product_line_name,
        t.created_by,
        t.is_leader,
        t.creation_date,
        t.user_count,
        t2.online_job_num,
        t.priority,
        t.forbid_udx_updation,
        t.allow_job_add_edit
        from (
        SELECT
        sp.id,
        sp.project_code,
        sp.project_name,
        sp.product_line_code,
        sp.product_line_name,
        su.user_name as created_by,
        <if test="userId != null and userId != 0">
            max(case spu.user_id when #{userId} then spu.is_leader else null end) as is_leader,
        </if>
        count(spu.user_id) as user_count,
        sp.creation_date,
        sp.priority,
        sp.forbid_udx_updation,
        sp.allow_job_add_edit
        from sdp_project sp
        left join sdp_user su on sp.created_by = su.id
        <if test="userId != null and userId != 0">
            left join sdp_project_user spu on sp.id = spu.project_id and spu.enabled_flag = 1 and spu.is_leader &lt; 2
        </if>
        <where>
            sp.enabled_flag = 1
            <if test="projectName != null and projectName != ''">AND sp.project_name like CONCAT('%',
                #{projectName, jdbcType=VARCHAR},'%')
            </if>
            <if test="productLineName != null and productLineName != ''">AND sp.product_line_name like CONCAT('%',
                #{productLineName, jdbcType=VARCHAR},'%')
            </if>

        </where>
        <if test="userId != null and userId != 0">
            group by
            sp.id,
            sp.project_name,
            sp.project_code,
            sp.product_line_code,
            sp.product_line_name,
            created_by,
            sp.creation_date
        </if>
        )t
        left join (select sj.project_id,count(sj.id) as online_job_num
        from sdp_job sj
        left join sdp_job_instance sji
        on sj.id = sji.job_id
        where  sj.enabled_flag = 1 and sji.enabled_flag = 1 and
        sji.is_latest = 1 group by sj.project_id) t2 on t2.project_id = t.id
        )t1
        left join sdp_project_user spu2 on t1.id = spu2.project_id and spu2.enabled_flag = 1
        left join sdp_user su2 on spu2.user_id = su2.id
        left join (select * from sdp_project_engine) spe on spe.project_id = t1.id and spe.enabled_flag = 1
        left join (select * from sdp_engine) se on se.id = spe.engine_id and se.enabled_flag = 1
        <include refid="orderByClauseInfo"/>
    </select>

    <sql id="orderByClauseInfo">
        <if test="orderByClauses != null">
            <trim prefix=" ORDER  BY " suffix="  " suffixOverrides=",">
                <foreach collection="orderByClauses" item="orderByObj">
                    <if test="orderByObj.field != null and orderByObj.field != ''">
                        <if test="orderByObj.orderByMode == 0">
                            #{orderByObj.field} ASC ,
                        </if>
                        <if test="orderByObj.orderByMode != 0">
                            #{orderByObj.field} DESC ,
                        </if>
                    </if>
                </foreach>
            </trim>
        </if>
    </sql>
    <select id="allCount" resultMap="ResultMap1">
        SELECT
        count(distinct (spu.user_id)) as employee_total,
        count(distinct (sf.id)) as job_total,
        count(distinct (sp.id)) as project_total
        from sdp_project sp
        left join (select * from sdp_file) sf on sp.id = sf.project_id and sf.enabled_flag = 1
        left join sdp_project_user spu on sp.id = spu.project_id and spu.enabled_flag = 1
        <where>
            sp.enabled_flag = 1

                <if test="projectName != null and projectName != ''">
                    AND project_name like CONCAT('%', #{projectName, jdbcType=VARCHAR},'%')
                </if>
                <if test="productLineName != null and productLineName != ''">
                    AND product_line_name like CONCAT('%', #{productLineName, jdbcType=VARCHAR},'%')

            </if>
            <if test="userId != null and userId != 0">
                AND sp.id in (select project_id from sdp_project_user where user_id = #{userId} and enabled_flag = 1)
            </if>
        </where>
    </select>

    <select id="projectsCount" resultType="java.lang.Long">
        SELECT
        count(1)
        from sdp_project
        <where>
            enabled_flag = 1
            <if test="vo != null">
                <if test="vo.projectName != null and vo.projectName != ''">
                    AND project_name like CONCAT('%', #{vo.projectName, jdbcType=VARCHAR},'%')
                </if>
            </if>
            <if test="userId != null and userId != 0">
                AND id in (select project_id from sdp_project_user where user_id = #{userId} and enabled_flag = 1)
            </if>
        </where>
    </select>

    <select id="filesCount" resultType="java.lang.Long">
        SELECT
        count(sf.id)
        from sdp_project sp
        left join sdp_file sf on sp.id = sf.project_id and sf.enabled_flag = 1
        <where>
            sp.enabled_flag = 1
            <if test="vo != null">
                <if test="vo.projectName != null and vo.projectName != ''">
                    AND project_name like CONCAT('%', #{vo.projectName, jdbcType=VARCHAR},'%')
                </if>
            </if>
            <if test="userId != null and userId != 0">
                AND sp.id in (select project_id from sdp_project_user where user_id = #{userId} and enabled_flag = 1)
            </if>
        </where>
    </select>


    <select id="usersCount" resultType="java.lang.Long">
        SELECT
        count(distinct (spu.user_id))
        from sdp_project sp
        left join sdp_project_user spu on sp.id = spu.project_id and spu.enabled_flag = 1
        <where>
            sp.enabled_flag = 1
            <if test="vo != null">
                <if test="vo.projectName != null and vo.projectName != ''">
                    AND project_name like CONCAT('%', #{vo.projectName, jdbcType=VARCHAR},'%')
                </if>
            </if>
            <if test="userId != null and userId != 0">
                AND sp.id in (select project_id from sdp_project_user where user_id = #{userId} and enabled_flag = 1)
            </if>
        </where>
    </select>

    <select id="searchByName" resultMap="BaseResultMap">
        SELECT * from sdp_project
        <where>
            enabled_flag = 1
            <if test="projectName != null and projectName != ''">
                AND project_name like CONCAT('%',#{ projectName},'%')
            </if>
        </where>
    </select>

    <select id="getProjects" resultMap="BaseResultMap">
        SELECT
        distinct
        sp.id,
        sp.project_name,
        sp.project_code,
        sp.product_line_code,
        sp.product_line_name,
        sp.created_by,
        sp.creation_date
        from sdp_project sp
        left join sdp_project_user spu on spu.project_id = sp.id and spu.enabled_flag = 1
        <where>
            sp.enabled_flag = 1
            <if test="userId != null and userId != 0">
                and spu.user_id = #{userId}
            </if>
            <if test="projectName != null and projectName != ''">
                and sp.project_name like concat('%',#{projectName},'%')
            </if>
        </where>
    </select>

    <select id="getByName" resultMap="BaseResultMap">
        SELECT * from sdp_project
        <where>
            enabled_flag = 1
            <if test="projectName != null and projectName != ''">
                AND project_name = #{projectName}
            </if>
        </where>
    </select>

    <select id="getProject4Engine" resultMap="ResultMap">
        SELECT
        sp.id,
        sp.project_name,
        sp.project_code,
        sp.product_line_code,
        sp.product_line_name,
        sp.created_by,
        sp.creation_date,
        su.user_name as project_owner
        from sdp_project sp
        left join sdp_project_user spu on spu.project_id = sp.id and spu.enabled_flag = 1 and spu.is_leader = 2
        left join sdp_user su on su.id = spu.user_id and su.enabled_flag = 1
        left join sdp_project_engine spe on spe.project_id = sp.id and spe.enabled_flag = 1
        <where>
            sp.enabled_flag = 1
            <if test="engineId != null ">
                and spe.engine_id = #{engineId}
            </if>
        </where>
    </select>

    <select id="getProjectByCode" resultMap="BaseResultMap">
        SELECT * from sdp_project
        where enabled_flag = 1
        and project_code = #{projectCode}
        limit 1
    </select>

    <select id="getJobOnlineNumByProjectid" resultMap="ResultMap">
        select count(sj.id) as online_job_num,sj.project_id as id  from sdp_job sj
        inner join sdp_job_instance sji on sj.id = sji.job_id and sj.enabled_flag = 1 and sji.enabled_flag = 1 and sji.is_latest = 1
        where
        sj.project_id in
        <foreach collection="projectIds" item="projectId" separator="," open="(" close=")">
            #{projectId}
        </foreach>
        group by sj.project_id
    </select>

    <select id="getProjectInfo" resultMap="PlusResultMap">
        SELECT
        sp.id,
        sp.project_code,
        sp.project_name,
        sp.product_line_code,
        sp.product_line_name,
        su.user_name as created_by,
        <if test="criteria.userId != null and criteria.userId != 0">
            max(case spu.user_id when #{criteria.userId} then spu.is_leader else null end) as is_leader,
        </if>
        sp.creation_date,
        ifnull(
        (select count(sj.id)
        from sdp_job sj
        inner join sdp_job_instance sji
        on sj.id = sji.job_id and sj.enabled_flag = 1 and sji.enabled_flag = 1 and
        sji.is_latest = 1
        where sji.project_id = sp.id), 0) as online_job_num
        from sdp_project sp
        left join sdp_user su on sp.created_by = su.id
        <if test="criteria.userId != null and criteria.userId != 0">
            left join sdp_project_user spu  on sp.id = spu.project_id and spu.enabled_flag = 1
        </if>
        <where>
            sp.enabled_flag = 1
            <if test="criteria.vo != null">
                <if test="criteria.vo.projectName != null and criteria.vo.projectName != ''">
                    AND sp.project_name like CONCAT('%', #{criteria.vo.projectName, jdbcType=VARCHAR},'%')
                </if>
                <if test="criteria.vo.productLineName != null and criteria.vo.productLineName != ''">
                    AND sp.product_line_name like CONCAT('%', #{criteria.vo.productLineName, jdbcType=VARCHAR},'%')
                </if>
            </if>
        </where>
        <if test="criteria.userId != null and criteria.userId != 0">
            group by
            sp.id,
            sp.project_name,
            sp.project_code,
            sp.product_line_code,
            sp.product_line_name,
            created_by,
            sp.creation_date
        </if>
        <if test="criteria != null and  criteria.orderByClauses != null ">
            <if test="criteria != null and criteria.orderByClauses != null ">
                <trim prefix=" ORDER  BY " suffix="  " suffixOverrides=",">
                    <foreach collection="criteria.orderByClauses" item="orderByObj">
                        <if test="orderByObj.field != null and orderByObj.field != ''">
                            <if test="orderByObj.orderByMode == 0">
                                #{orderByObj.field} ASC ,
                            </if>
                            <if test="orderByObj.orderByMode != 0">
                                #{orderByObj.field} DESC ,
                            </if>
                        </if>
                    </foreach>
                </trim>
            </if>
        </if>
    </select>

    <select id="getProjectCodeByIds" resultMap="BaseResultMap">
        select
        id,project_code
        from sdp_project
        where
        id in
        <foreach collection="ids" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </select>
</mapper>