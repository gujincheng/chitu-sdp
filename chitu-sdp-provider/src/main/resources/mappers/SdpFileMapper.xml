<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chitu.bigdata.sdp.mapper.SdpFileMapper">
    <resultMap id="BaseResultMap" type="com.chitu.bigdata.sdp.api.model.SdpFile">
        <id column="id" jdbcType="BIGINT" property="id" />
        <result column="file_name" jdbcType="VARCHAR" property="fileName" />
        <result column="file_type" jdbcType="VARCHAR" property="fileType" />
        <result column="content" jdbcType="LONGVARCHAR" property="content" />
        <result column="meta_table_content" jdbcType="LONGVARCHAR" property="metaTableContent" />
        <result column="etl_content" jdbcType="LONGVARCHAR" property="etlContent" />
        <result column="config_content" jdbcType="LONGVARCHAR" property="configContent" />
        <result column="dag" jdbcType="LONGVARCHAR" property="dag" />
        <result column="source_content" jdbcType="LONGVARCHAR" property="sourceContent" />
        <result column="data_stream_config" jdbcType="LONGVARCHAR" property="dataStreamConfig" />
        <result column="file_status" jdbcType="VARCHAR" property="fileStatus" />
        <result column="business_flag" jdbcType="VARCHAR" property="businessFlag" />
        <result column="locked_by" jdbcType="VARCHAR" property="lockedBy" />
        <result column="project_id" jdbcType="BIGINT" property="projectId" />
        <result column="folder_id" jdbcType="BIGINT" property="folderId" />
        <result column="need_approve" jdbcType="TINYINT" property="need2Approve" />
        <result column="enabled_flag" jdbcType="TINYINT" property="enabledFlag" />
        <result column="trace_id" jdbcType="VARCHAR" property="traceId" />
        <result column="created_by" jdbcType="VARCHAR" property="createdBy" />
        <result column="updated_by" jdbcType="VARCHAR" property="updatedBy" />
        <result column="creation_date" jdbcType="TIMESTAMP" property="creationDate" />
        <result column="updation_date" jdbcType="TIMESTAMP" property="updationDate" />
        <result column="priority" jdbcType="INTEGER" property="priority" />
    </resultMap>

    <resultMap id="ResultMap" type="com.chitu.bigdata.sdp.api.model.SdpFile">
        <id column="id" jdbcType="BIGINT" property="id" />
        <result column="file_name" jdbcType="VARCHAR" property="fileName" />
        <result column="file_type" jdbcType="VARCHAR" property="fileType" />
        <result column="content" jdbcType="LONGVARCHAR" property="content" />
        <result column="meta_table_content" jdbcType="LONGVARCHAR" property="metaTableContent" />
        <result column="etl_content" jdbcType="LONGVARCHAR" property="etlContent" />
        <result column="config_content" jdbcType="LONGVARCHAR" property="configContent" />
        <result column="dag" jdbcType="LONGVARCHAR" property="dag" />
        <result column="source_content" jdbcType="LONGVARCHAR" property="sourceContent" />
        <result column="data_stream_config" jdbcType="LONGVARCHAR" property="dataStreamConfig" />
        <result column="file_status" jdbcType="VARCHAR" property="fileStatus" />
        <result column="business_flag" jdbcType="VARCHAR" property="businessFlag" />
        <result column="locked_by" jdbcType="VARCHAR" property="lockedBy" />
        <result column="project_id" jdbcType="BIGINT" property="projectId" />
        <result column="folder_id" jdbcType="BIGINT" property="folderId" />
        <result column="enabled_flag" jdbcType="TINYINT" property="enabledFlag" />
        <result column="trace_id" jdbcType="VARCHAR" property="traceId" />
        <result column="created_by" jdbcType="VARCHAR" property="createdBy" />
        <result column="updated_by" jdbcType="VARCHAR" property="updatedBy" />
        <result column="creation_date" jdbcType="TIMESTAMP" property="creationDate" />
        <result column="updation_date" jdbcType="TIMESTAMP" property="updationDate" />
        <result column="is_on_line" jdbcType="INTEGER" property="isOnLine" />
        <result column="project_name" jdbcType="VARCHAR" property="projectName" />
        <result column="business_value" jdbcType="LONGVARCHAR" property="businessValue" />
        <result column="tech_specifications" jdbcType="LONGVARCHAR" property="techSpecifications" />
        <result column="priority" jdbcType="INTEGER" property="priority" />
    </resultMap>

    <resultMap id="PlusResultMap" type="com.chitu.bigdata.sdp.api.vo.SdpFileResp">
        <id column="id" jdbcType="BIGINT" property="id" />
        <result column="file_name" jdbcType="VARCHAR" property="fileName" />
        <result column="file_type" jdbcType="VARCHAR" property="fileType" />
        <result column="content" jdbcType="LONGVARCHAR" property="content" />
        <result column="meta_table_content" jdbcType="LONGVARCHAR" property="metaTableContent" />
        <result column="etl_content" jdbcType="LONGVARCHAR" property="etlContent" />
        <result column="config_content" jdbcType="LONGVARCHAR" property="configContent" />
        <result column="dag" jdbcType="LONGVARCHAR" property="dag" />
        <result column="source_content" jdbcType="LONGVARCHAR" property="sourceContent" />
        <result column="data_stream_config" jdbcType="LONGVARCHAR" property="dataStreamConfig" />
        <result column="file_status" jdbcType="VARCHAR" property="fileStatus" />
        <result column="business_flag" jdbcType="VARCHAR" property="businessFlag" />
        <result column="locked_by" jdbcType="VARCHAR" property="lockedBy" />
        <result column="project_id" jdbcType="BIGINT" property="projectId" />
        <result column="folder_id" jdbcType="BIGINT" property="folderId" />
        <result column="enabled_flag" jdbcType="TINYINT" property="enabledFlag" />
        <result column="trace_id" jdbcType="VARCHAR" property="traceId" />
        <result column="created_by" jdbcType="VARCHAR" property="createdBy" />
        <result column="updated_by" jdbcType="VARCHAR" property="updatedBy" />
        <result column="creation_date" jdbcType="TIMESTAMP" property="creationDate" />
        <result column="updation_date" jdbcType="TIMESTAMP" property="updationDate" />
        <result column="lock_sign" jdbcType="BIGINT" property="lockSign" />
        <result column="is_on_line" jdbcType="INTEGER" property="isOnLine" />
        <result column="project_name" jdbcType="VARCHAR" property="projectName" />
        <result column="priority" jdbcType="INTEGER" property="priority" />
    </resultMap>

    <sql id="BaseTable">
        sdp_file
    </sql>

    <select id="selectAll" parameterType="com.chitu.bigdata.sdp.api.model.SdpFile" resultMap="ResultMap">
        select
        sf.id,
        sf.file_name,
        sf.file_type,
        sf.content,
        sf.config_content,
        sf.dag,
        sf.source_content,
        sf.data_stream_config,
        sf.file_status,
        sf.locked_by,
        sf.project_id,
        sf.folder_id,
        sf.enabled_flag,
        sf.creation_date,
        sf.updation_date,
        case when sj.id is null then 0 else 1 end as is_on_line
        from sdp_file sf
        left join sdp_job sj on sj.file_id = sf.id and sj.enabled_flag = 1
        <where>
            sf.enabled_flag = 1
            <if test="fileName != null and fileName != ''">
                and sf.file_name like concat('%',#{fileName},'%')
            </if>
            <if test="projectId != null">
                and sf.project_id = #{projectId}
            </if>
            <if test="folderId != null">
                and sf.folder_id = #{folderId}
            </if>
            <if test="id != null">
                and sf.id = #{id}
            </if>
        </where>
        order by sf.file_name
    </select>


    <select id="selectByInstance" parameterType="com.chitu.bigdata.sdp.api.model.SdpFile" resultMap="ResultMap">
        select
        sf.id,
        sf.file_name,
        sf.file_type,
        sf.content,
        sf.config_content,
        sf.dag,
        sf.source_content,
        sf.data_stream_config,
        sf.file_status,
        sf.locked_by,
        sf.project_id,
        sf.folder_id,
        sf.enabled_flag,
        sf.creation_date,
        sf.updation_date
        from sdp_file sf
        <where>
            sf.enabled_flag = 1
            <if test="fileName != null and fileName != ''">
                and sf.file_name like concat('%',#{fileName},'%')
            </if>
            <if test="projectId != null">
                and sf.project_id = #{projectId}
            </if>
            <if test="folderId != null">
                and sf.folder_id = #{folderId}
            </if>
            <if test="id != null">
                and sf.id = #{id}
            </if>
        </where>
    </select>

    <select id="getDetailFile"  resultMap="PlusResultMap">
        select
        sf.id,
        sf.file_name,
        sf.file_type,
        sf.content,
        sf.meta_table_content,
        sf.etl_content,
        sf.config_content,
        sf.dag,
        sf.source_content,
        sf.data_stream_config,
        sf.file_status,
        su.user_name as locked_by,
        sf.project_id,
        sf.folder_id,
        sf.enabled_flag,
        sf.creation_date,
        sf.updation_date,
        <if test="userId != null ">
            case when sf.locked_by = #{userId} then 1
            when sf.locked_by is null then 1
            else 0 end as lock_sign ,
        </if>
        case when sj.id is null then 0 else 1 end as is_on_line
        from sdp_file sf
        left join sdp_job sj on sj.file_id = sf.id  and sj.enabled_flag = 1
        left join sdp_user su on sf.locked_by = su.id and su.enabled_flag = 1
        <where>
            sf.enabled_flag = 1
            <if test="id != null ">
                and sf.id = #{id}
            </if>
        </where>
    </select>
    <select id="getEngine4File"  resultMap="BaseResultMap">
        select
        content,
        config_content,
        source_content,
        data_stream_config,
        project_id,
        enabled_flag
        from sdp_file
        <where>
            enabled_flag = 1
            <if test="projectId != null ">
                and project_id = #{projectId}
            </if>
            <if test="engineId != null ">
                and JSON_EXTRACT(config_content,'$.id') = #{engineId}
            </if>
        </where>
        union
        select
        job_content as content,
        config_content,
        source_content,
        data_stream_config,
        project_id,
        enabled_flag
        from sdp_job_instance
        <where>
            enabled_flag = 1
            and  is_latest = 1
            <if test="projectId != null ">
                and project_id = #{projectId}
            </if>
            <if test="engineId != null ">
                and JSON_EXTRACT(config_content,'$.engineId') = #{engineId}
            </if>
        </where>
    </select>

    <select id="getFile" parameterType="com.chitu.bigdata.sdp.api.model.SdpFile" resultMap="BaseResultMap" flushCache="true" useCache="false">
        select * from sdp_file
        <where>
            enabled_flag = 1
            <if test="fileName != null and fileName != ''">
                and binary file_name = #{fileName}
            </if>
            <if test="projectId != null">
                and project_id = #{projectId}
            </if>
            <if test="id != null">
                and id = #{id}
            </if>
        </where>
    </select>


    <select id="queryFileByJobId" resultMap="BaseResultMap">
        select sf.*
        from sdp_file sf
        inner join sdp_job sj on sj.file_id = sf.id and sj.enabled_flag = 1
        where sf.enabled_flag = 1
        and sj.id = #{jobId}
    </select>

    <select id="checkState" parameterType="java.util.List" resultMap="ResultMap">
        select
        sf.id,
        sf.enabled_flag,
        sf.file_type,
        case when sj.id is null then 0 else 1 end as is_on_line
        from sdp_file sf
        left join sdp_job sj on sj.file_id = sf.id and sj.enabled_flag = 1
        where sf.id in
        <foreach collection="list" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </select>
    <select id="getFileHistory"  resultMap="PlusResultMap">
        select
        sf.id,
        sf.file_name,
        sf.folder_id,
        sf.project_id,
        sf.updated_by,
        sf.updation_date,
        sp.project_name
        from sdp_file sf
        left join sdp_project sp on sf.project_id = sp.id and sp.enabled_flag = 1
        <where>
            sf.enabled_flag = 1
            <if test="updatedBy != null and updatedBy != ''">
                and sf.updated_by = #{updatedBy}
            </if>
        </where>
        order by sf.updation_date desc
        limit 10
    </select>

    <select id="getFileHistory4Common"  resultMap="PlusResultMap">
        select
        distinct
        sf.id,
        sf.file_name,
        sf.folder_id,
        sf.project_id,
        sf.updated_by,
        sf.updation_date,
        sp.project_name
        from sdp_file sf
        left join sdp_project sp on sf.project_id = sp.id and sp.enabled_flag = 1
        right join sdp_project_user spu on sf.project_id = spu.project_id and spu.user_id = sf.updated_by and spu.enabled_flag = 1
        <where>
            sf.enabled_flag = 1
            <if test="updatedBy != null and updatedBy != ''">
                and sf.updated_by = #{updatedBy}
            </if>
        </where>
        order by sf.updation_date desc
        limit 10
    </select>

    <select id="queryBaseInfo" resultMap="ResultMap">
        select sfe.id,sf.file_name,sf.file_type,sp.project_name,su1.user_name created_by,su2.user_name updated_by,
        sf.folder_id,sf.creation_date,sf.updation_date,sfe.business_value,sfe.tech_specifications
        from sdp_file sf
        left join sdp_file_extra sfe on sfe.file_id = sf.id and sfe.enabled_flag = 1
        left join sdp_project sp on sp.id = sf.project_id and sp.enabled_flag = 1
        left join sdp_user su1 on su1.id = sf.created_by and su1.enabled_flag = 1
        left join sdp_user su2 on su2.id = sf.updated_by and su2.enabled_flag = 1
        <where>
            sf.enabled_flag = 1
            <if test="id != null and id != ''">
                and sf.id = #{id}
            </if>
        </where>
    </select>

    <update id="updateApproveFlag" parameterType="com.chitu.bigdata.sdp.api.model.SdpFile">
        update sdp_file
        set need_approve = #{need2Approve}
        where id = #{id}
    </update>

    <select id="queryCountByMinId" resultType="java.lang.Integer">
        select count(*) from sdp_file where id &lt; #{minId} and business_flag ='SDP' and file_type = 'SQL'  and enabled_flag = 1
    </select>
    <select id="queryByMinId" resultMap="ResultMap">
        select * from sdp_file where id &lt; #{minId} and business_flag ='SDP' and file_type = 'SQL'  and enabled_flag = 1 order by id desc limit #{pageSize}
    </select>

    <select id="selectByFileNames" resultMap="ResultMap">
        select * from sdp_file
         where file_name in
        <foreach collection="fileNames" item="fileName" separator="," open="(" close=")">
            #{fileName}
        </foreach>
        and enabled_flag = 1
        and project_id = #{projectId}
    </select>


</mapper>