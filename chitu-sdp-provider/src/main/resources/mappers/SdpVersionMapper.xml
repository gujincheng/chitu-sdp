<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chitu.bigdata.sdp.mapper.SdpVersionMapper">
    <resultMap id="BaseResultMap" type="com.chitu.bigdata.sdp.api.model.SdpVersion">
        <id column="id" jdbcType="BIGINT" property="id" />
        <result column="file_name" jdbcType="VARCHAR" property="fileName" />
        <result column="file_version" jdbcType="VARCHAR" property="fileVersion" />
        <result column="file_content" jdbcType="LONGVARCHAR" property="fileContent" />
        <result column="meta_table_content" jdbcType="LONGVARCHAR" property="metaTableContent" />
        <result column="etl_content" jdbcType="LONGVARCHAR" property="etlContent" />
        <result column="meta_table_json" jdbcType="LONGVARCHAR" property="metaTableJson" />
        <result column="config_content" jdbcType="LONGVARCHAR" property="configContent" />
        <result column="source_content" jdbcType="LONGVARCHAR" property="sourceContent" />
        <result column="data_stream_config" jdbcType="LONGVARCHAR" property="dataStreamConfig" />
        <result column="remark" jdbcType="VARCHAR" property="remark" />
        <result column="project_id" jdbcType="BIGINT" property="projectId" />
        <result column="file_id" jdbcType="BIGINT" property="fileId" />
        <result column="enabled_flag" jdbcType="TINYINT" property="enabledFlag" />
        <result column="trace_id" jdbcType="VARCHAR" property="traceId" />
        <result column="created_by" jdbcType="VARCHAR" property="createdBy" />
        <result column="updated_by" jdbcType="VARCHAR" property="updatedBy" />
        <result column="creation_date" jdbcType="TIMESTAMP" property="creationDate" />
        <result column="updation_date" jdbcType="TIMESTAMP" property="updationDate" />
    </resultMap>
    <sql id="BaseTable">
        sdp_version
    </sql>

    <resultMap id="ResultMap" type="com.chitu.bigdata.sdp.api.model.SdpVersion">
        <id column="id" jdbcType="BIGINT" property="id" />
        <result column="file_name" jdbcType="VARCHAR" property="fileName" />
        <result column="file_version" jdbcType="VARCHAR" property="fileVersion" />
        <result column="file_content" jdbcType="LONGVARCHAR" property="fileContent" />
        <result column="meta_table_content" jdbcType="LONGVARCHAR" property="metaTableContent" />
        <result column="etl_content" jdbcType="LONGVARCHAR" property="etlContent" />
        <result column="meta_table_json" jdbcType="LONGVARCHAR" property="metaTableJson" />
        <result column="config_content" jdbcType="LONGVARCHAR" property="configContent" />
        <result column="source_content" jdbcType="LONGVARCHAR" property="sourceContent" />
        <result column="data_stream_config" jdbcType="LONGVARCHAR" property="dataStreamConfig" />
        <result column="remark" jdbcType="VARCHAR" property="remark" />
        <result column="project_id" jdbcType="BIGINT" property="projectId" />
        <result column="file_id" jdbcType="BIGINT" property="fileId" />
        <result column="enabled_flag" jdbcType="TINYINT" property="enabledFlag" />
        <result column="trace_id" jdbcType="VARCHAR" property="traceId" />
        <result column="created_by" jdbcType="VARCHAR" property="createdBy" />
        <result column="updated_by" jdbcType="VARCHAR" property="updatedBy" />
        <result column="creation_date" jdbcType="TIMESTAMP" property="creationDate" />
        <result column="updation_date" jdbcType="TIMESTAMP" property="updationDate" />
        <result column="enabled_del" jdbcType="TINYINT" property="enabledDel" />
    </resultMap>
    <!--版本有删除的，这个方法是使用于获取最新的版本 -->
    <select id="getVersionByFileId" parameterType="com.chitu.bigdata.sdp.api.model.SdpVersion" resultMap="BaseResultMap">
        select * from sdp_version
        where  file_id = #{fileId}
        order by id desc
        limit 1
    </select>

    <select id="getVersions"  resultMap="ResultMap">
        select
         sv.id,
         sv.file_name,
         sv.file_version,
         sv.config_content,
         sv.source_content,
         sv.remark,
         sv.project_id,
         sv.creation_date,
         sv.file_id,
         sv.enabled_flag,
         su.user_name as created_by,
         case when sv.file_version = sj.running_version then 0
         when sv.file_version = sj.latest_version then 0
         else 1 end as enabled_del
        from sdp_version sv
        left join sdp_user su on sv.created_by = su.id and su.enabled_flag = 1
        left join sdp_job sj on sv.file_id = sj.file_id and sj.enabled_flag = 1
        <where>
            sv.enabled_flag = 1
            <if test="criteria.vo != null">
                <if test="criteria.vo.fileId != null ">
                    and sv.file_id = #{criteria.vo.fileId,jdbcType=BIGINT}
                </if>
            </if>
        </where>
        <if test="criteria != null and  criteria.orderByClauses != null ">
            <if test="criteria != null and criteria.orderByClauses != null ">
                <trim prefix=" ORDER  BY " suffix="  " suffixOverrides=",">
                    <foreach collection="criteria.orderByClauses" item="orderByObj">
                        <if test="orderByObj.field != null and orderByObj.field != ''">
                            <if test="orderByObj.orderByMode == 0">
                                #{orderByObj.field} ASC ,
                            </if>
                            <if test="orderByObj.orderByMode != 0">
                                #{orderByObj.field} DESC ,
                            </if>
                        </if>
                    </foreach>
                </trim>
            </if>
        </if>
    </select>

    <select id="selectLastVersion"  resultMap="ResultMap">
        select
        id,
        file_name,
        file_version,
        config_content,
        source_content,
        file_Content,
        meta_table_content,
        etl_content,
        remark,
        project_id,
        data_stream_config,
        file_id,
        enabled_flag
        from sdp_version
        <where>
           enabled_flag = 1
            <if test="fileId != null">
                    and file_id = #{fileId,jdbcType=BIGINT}
            </if>
        </where>
        order by id desc limit 1
    </select>

</mapper>